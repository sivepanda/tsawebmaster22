# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: FTP Deploy
        # You may pin to the exact commit or the version.
        # uses: SamKirkland/FTP-Deploy-Action@d0aa83872616587eb552bc831bb9166b3f9c5ad5
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          # ftp server
          server: files.000webhost.com
          # ftp username
          username: nuwrld
          # ftp password
          password: FTP_PASS
          # Server port to connect to (read your web hosts docs)
          port: 21
          # protocol to deploy with - ftp, ftps, or ftps-legacy
#           protocol: # optional
          # Folder to upload from, must end with trailing slash /
#           local-dir: # optional
          # Path to upload to on the server. Must end with trailing slash /
#           server-dir: # optional
          # Path and name of the state file - this file is used to track which files have been deployed
#           state-name: # optional
#           Prints which modifications will be made with current config options, but doesnt actually make any changes
#           dry-run: # optional
          # Deletes ALL contents of server-dir, even items in excluded with exclude argument
#           dangerous-clean-slate: # optional
          # An array of glob patterns, these files will not be included in the publish/delete process
#           exclude: # optional
          # How verbose should the information be - minimal, standard, or verbose
#           log-level: # optional
          # strict or loose
#           security: # optional

